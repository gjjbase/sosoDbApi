<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dev.doc.dao.ApiDocDao">
	<insert id="add" parameterType="apiDoc" useGeneratedKeys="true" keyProperty="id">
		insert into t_api_doc
			(
				create_date,
				modify_date,
				proj_id,
				title,
				description,
				host,
				base_path,
				version,
				pub,
				open,
				scheme,
				consume,
				produce
			)
		values
			(
				#{createDate},
				#{modifyDate},
				#{projId},
				#{title},
				#{description},
				#{host},
				#{basePath},
				#{version},
				#{pub},
				#{open},
				#{scheme},
				#{consume},
				#{produce}
			)	
	</insert>
	
	<update id="update" parameterType="apiDoc">
		update t_api_doc
		<set>
			<if test="modifyDate != null and '' != modifyDate"> modify_date = #{modifyDate},</if>
			<if test="projId != null and '' != projId"> proj_id = #{projId},</if>
			<if test="title != null and '' != title"> title = #{title},</if>
			<if test="true"> description = #{description},</if>
			<if test="host != null and '' != host"> host = #{host},</if>
			<if test="basePath != null and '' != basePath"> base_path = #{basePath},</if>
			<if test="true"> version = #{version},</if>
			<if test="pub != null"> pub = #{pub},</if>
			<if test="open != null"> open = #{open},</if>
			<if test="scheme != null and '' != scheme"> scheme = #{scheme},</if>
			<if test="consume != null and '' != consume"> consume = #{consume},</if>
			<if test="produce != null and '' != produce"> produce = #{produce},</if>
		</set>
		where
			id = #{id}
	</update>
	
	<delete id="deleteById" parameterType="long">
		delete from
			t_api_doc
		where
			id = #{id}
	</delete>
	
	<select id="getById" resultType="apiDoc">
		select
			*
		from
			t_api_doc
		where
			id = #{id}
	</select>
	
	<select id="getByProjId" resultType="apiDoc">
		select
			*
		from
			t_api_doc
		where
			proj_id = #{projId}
	</select>
	
	<select id="countRecord" resultType="int">
		select
			count(d.id)
		from
			t_api_doc d
		inner join
			t_proj p
		on
			d.proj_id = p.id
		inner join
			t_proj_mem m
		on
			p.id = m.proj_id
		where
			d.id = #{docId}
		and
			m.user_id = #{userId}
	</select>
	
	<sql id="sqlForListByUserId">
		from
			t_proj_mem pm
		inner join
			t_proj p
		on
			pm.proj_id = p.id
		inner join
			t_api_doc d
		on
			p.id = d.proj_id
		where
			pm.user_id = #{userId}
		and
			d.pub = 1
		<if test="title != null">
		and
			d.title = #{title}
		</if>
	</sql>
	
	<select id="listByUserId" resultType="map">
		select
		    p.id as proj_id,
			p.code,
			p.name,
			d.id as doc_id,
			d.title,
			d.create_date,
			d.version
		<include refid="sqlForListByUserId"></include>
		order by
			d.create_date desc,p.code asc
		limit
			#{pager.start},#{pager.pageSize}
	</select>
	
	<select id="countByUserId" resultType="int">
		select
			count(d.id)
		<include refid="sqlForListByUserId"></include>
	</select>

	<select id="selectByCreatData" resultType="apiDoc">
		select * from t_api_doc where create_date =#{creatData}
	</select>
</mapper>