<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dev.user.dao.SuggestDao">
	<insert id="add" parameterType="suggest" useGeneratedKeys="true" keyProperty="id">
		insert into t_suggest
			(
				create_date,
				modify_date,
				user_id,
				title,
				content,
				deal_date,
				status,
				type
			)
		values
			(
				#{createDate},
				#{modifyDate},
				#{userId},
				#{title},
				#{content},
				#{dealDate},
				#{status},
				#{type}
			)	
	</insert>
	
	<update id="update" parameterType="suggest">
		update t_suggest
		<set>
			<if test="modifyDate != null and '' != modifyDate"> modify_date = #{modifyDate},</if>
			<if test="title != null and '' != title"> title = #{title},</if>
			<if test="content != null and '' != content"> content = #{content},</if>
			<if test="dealDate != null and '' != dealDate"> deal_date = #{dealDate},</if>
			<if test="status != null and '' != status"> status = #{status},</if>
			<if test="type != null and '' != type"> type = #{type},</if>
		</set>
		where
			id = #{id}
	</update>
	
	<delete id="deleteById" parameterType="long">
		delete from
			t_suggest
		where
			id = #{id}
	</delete>
	
	<select id="getById" resultType="suggest">
		select
			*
		from
			t_suggest
		where
			id = #{id}
	</select>
	
	<sql id="sqlForListAll">
		from
			t_suggest s
		inner join
			t_user_basic b
		on
			s.user_id = b.id
		inner join
			t_user_detail d
		on
			s.user_id = d.user_id
		<where>
			<if test="email != null and '' != email">
			and
				b.email like #{email}
			</if>
			<if test="nickName != null and '' != nickName">
			and
				d.nick_name like #{nickName}
			</if>
			<if test="status != null and '' != status">
			and
				s.status = #{status}
			</if>
			<if test="type != null and '' != type">
			and
				s.type = #{type}
			</if>
		</where>
	</sql>
	
	<select id="listAll" resultType="map">
		select
			s.id as suggest_id,
			s.title,
			s.content,
			s.create_date,
			s.status,
			s.type,
			b.id as user_id,
			b.email,
			d.nick_name
		<include refid="sqlForListAll"></include>
		order by
			s.create_date desc
		limit
			#{pager.start},#{pager.pageSize}
	</select>
	
	<select id="countAll" resultType="int">
		select
			count(b.id)
		<include refid="sqlForListAll"></include>
	</select>
	
	<select id="getDetailById" resultType="map">
		select
			s.id as suggest_id,
			s.title,
			s.content,
			s.create_date,
			s.status,
			s.type,
			b.id as user_id,
			b.email,
			d.nick_name
		from
			t_suggest s
		inner join
			t_user_basic b
		on
			s.user_id = b.id
		inner join
			t_user_detail d
		on
			s.user_id = d.user_id
		where
			s.id = #{id}
	</select>
</mapper>